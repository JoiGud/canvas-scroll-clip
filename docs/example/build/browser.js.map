{
  "version": 3,
  "sources": ["../../src/helpers/error.ts", "../../src/helpers/utils.ts", "../../src/common/frame.ts", "../../src/common/events.ts", "../../src/common/base.ts", "../../src/common/options.ts", "../../src/common/canvas.ts", "../../src/main.ts", "../../src/browser.ts"],
  "sourcesContent": ["/**\n * AppError class.\n *\n * @export\n * @class AppError\n * @extends {Error}\n */\nexport class AppError extends Error {\n\n  /**\n   * Creates an instance of AppError.\n   * @param {string} warning message.\n   * @memberof AppError\n   */\n  constructor(message?: string) {\n\n    if (!message) {\n      message = `Whoops! Something went wrong.`;\n    }\n\n    super(`${message}`);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, Object.getPrototypeOf(this));\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AppError);\n    }\n  }\n\n  /**\n   * Name of the property [of \"this\" or one of its prototypes] that holds\n   * the current function\n   *\n   * @memberof AppError\n   */\n  get name(): string {\n    return this.constructor.name\n  }\n}\n\n/**\n * AppLogger class.\n *\n * @export\n * @class AppLogger\n * @extends {AppError}\n */\nexport class AppLogger extends AppError {\n\n  /**\n   * wrapper logger for console.log\n   *\n   * @param {string}\n   * @memberof Logger\n   */\n  public log(message: string): void {\n    console.log(`${this.name}: ${message}`);\n  }\n\n  /**\n   * wrapper logger for console.warn\n   *\n   * @param {string}\n   * @memberof Logger\n   */\n  public warn(message: string): void {\n    console.warn(`${this.name}: ${message}`);\n  }\n}\n\n/**\n * AppWarning class.\n *\n * @export\n * @class AppWarning\n * @extends {AppLogger}\n */\nexport class AppWarning extends AppLogger {\n\n  /**\n   * Creates an instance of AppWarning.\n   * @param {string} warning message.\n   * @memberof AppWarning\n   */\n  constructor(message: string) {\n    super(message);\n\n    this.warn(message);\n  }\n}\n", "import { AppError } from \"./error\";\nimport { IFrame, IFrameSequence } from \"./intefaces\";\n\n/**\n * RegExp expression to find last digits in a string\n */\nexport const RegExpLastDigitsMatch = /\\d+(?!.*\\d+)/;\n\n/** \n* Available events\n**/\nexport const AppEvent = {\n  viewport: {\n    resize: 'viewport.resize',\n    scroll: 'viewport.scroll'\n  },\n  images: {\n    loaded: 'images.loaded'\n  }\n}\n\n/** \n* List of events\n**/\nexport const EventList = Object.values(AppEvent).map((e: Record<string, unknown>) => Object.values(e)).flat();\n\n/**\n * Debounce ot throttle function\n * \n * @param {func} \n * @param {threshold} \n * @returns \n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const debounce = <F extends ((...args: any) => any)>(func: F, threshold = 0): any => {\n  let timeout: ReturnType<typeof setTimeout>;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const debounced = (...args: any): void => {\n    if (timeout)\n      clearTimeout(timeout)\n\n    timeout = setTimeout(() => func(...args), threshold)\n  }\n\n  return debounced as (...args: Parameters<F>) => ReturnType<F>\n}\n\n/**\n * Preload images\n * \n * @param {imagesList} Array of strings\n * @param {callback} CallbackFunction\n */\nexport async function getImage(imageLink: string): Promise<HTMLImageElement> {\n  return new Promise((resolve, reject) => {\n    const image: HTMLImageElement = new Image();\n\n    image.onload = () => {\n      resolve(image);\n    }\n\n    image.src = imageLink;\n\n    image.onerror = () => {\n      reject(new AppError(`Image with name '...${imageLink.slice(-20)}' was not found.`));\n    }\n  })\n}\n\n/**\n * Preloading images\n * TODO: Maybe implement progress\n * \n * @returns Promise<HTMLImageElement[]> \n */\nexport function preloadImages(frameOptions: IFrame): Promise<HTMLImageElement[]> {\n  const arrayOfImages = new Array(frameOptions.count).fill(0).map((_elem, index) => {\n    return getImage(getFramePathByIndex(frameOptions, index + 1));\n  });\n\n  return Promise.all(arrayOfImages);\n}\n\n/**\n * Get scroll top position \n * \n * @returns number\n */\nexport function getScrollTop(): number {\n  return window.pageYOffset || document.documentElement.scrollTop; // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n}\n\n/**\n * Get scroll top position \n * \n * @param {scrollTop}\n * @returns number\n */\nexport function getScrollFraction(scrollTop = getScrollTop()): number {\n  return scrollTop / (document.documentElement.scrollHeight - window.innerHeight) || 0;\n}\n\n/**\n * Get frame URL by frame number\n * \n * @param {IFrame} frameOptions \n * @param {number} frameNumber \n * @returns {string}\n */\nexport function getFramePathByIndex(frameOptions: IFrame, frameNumber = 1): string {\n  return [\n    frameOptions.path,\n    frameOptions.image.start,\n    frameNumber.toString().padStart(frameOptions.image.padStart, \"0\"),\n    frameOptions.image.ending\n  ].join(\"\");\n}\n\n/**\n   * Get image base path\n   * \n   * @param firstFramePath \n   * @returns \n   */\nexport function getImageBasePath(firstFramePath: string): string {\n  const path = firstFramePath.split('/');\n\n  path.pop();\n\n  return `${path.join('/')}/`;\n}\n\n/**\n   * Get frame image structure\n   * \n   * @param {string} firstFramePath \n   * @param {number} frameCount \n   * @returns\n   * @throws {AppError}\n   */\nexport function getImageStructure(firstFramePath: string, frameCount: number): IFrameSequence {\n  const img = getPathEnding(firstFramePath);\n  const ext = getFileSuffix(img);\n  const seq = getImageSequence(img);\n\n  if (frameCount.toString().length > seq.length) {\n    throw new AppError(`Leading zeros in first frame path has to be more than the frame count and sequence at the end.`);\n  }\n\n  return {\n    start: img.slice(0, img.indexOf(seq)),\n    sequence: parseInt(seq),\n    padStart: seq.length,\n    ending: img.slice(img.indexOf(seq) + seq.length),\n    extension: ext,\n  };\n}\n\n/**\n * Get image sequence with leading zeros\n * \n * @param {string} imageName \n * @returns {string}\n * @throws {AppError} image sequence format not supported\n */\nexport function getImageSequence(imageName: string): string {\n  const match = imageName.match(RegExpLastDigitsMatch);\n  const sequence = (match && match[0] !== null) ? match[0] : \"\";\n\n  if (sequence.length < 2) {\n    throw new AppError('Bad image sequence format. Should start with 0 and be longer than 2 numbers, f.e. \"frame_01.jpg\"')\n  }\n\n  return sequence;\n}\n\n/**\n * Get file extension/suffix \n * Test whether is within supported extension/suffixes list\n * \n * @param fileName \n * @returns {string}\n * @throws {AppError} Unsupported image\n */\nexport function getFileSuffix(fileName: string): string {\n  const ext = fileName.split('.').pop() || ' ';\n\n  if (!['jpg', 'jpeg', 'png'].includes(ext)) {\n    throw new AppError(`Image with extension ['${ext}'] is not supported.`);\n  }\n\n  return `.${ext}`;\n}\n\n/**\n * Get ending of a url\n * \n * @param path \n * @returns \n */\nexport function getPathEnding(path: string): string {\n  const splitted = path.split('/');\n\n  return splitted.pop() || '';\n}", "import { AppError } from \"@/helpers/error\";\nimport { IFrame, IFrameSequence, IUserInputs } from \"@/helpers/intefaces\";\nimport * as utils from \"@/helpers/utils\"\n\nexport class Frame implements IFrame {\n\n  // Image base path\n  public path: string;\n\n  // Sequence frame count\n  public count: number;\n\n  // Sequence image structure\n  public image: IFrameSequence;\n\n  /**\n   * Creates an instance of Options.\n   * @param {IUserInputs} [options] Options to copy properties.\n   * @memberof Options\n   */\n  constructor({ framePath, frameCount }: IUserInputs) {\n\n    // test framePath is defined\n    if (!framePath.length) {\n      throw new AppError('Frame path is not defined.');\n    }\n\n    // test frameCount is defined\n    if (!frameCount) {\n      throw new AppError('Frame count is not defined.');\n    }\n\n    // Set frame count\n    this.count = frameCount;\n\n    // Set frame base path\n    this.path = utils.getImageBasePath(framePath);\n\n    // Set frame sequence structure\n    this.image = utils.getImageStructure(framePath, this.count)\n  }\n}", "import { NoopFunction } from \"@/helpers/intefaces\";\nimport { AppWarning } from \"@/helpers/error\";\nimport { EventList } from \"@/helpers/utils\";\n\n/** \n* Event emitter\n* https://github.com/peterkejun/Animated-Canvas/blob/05bf961da7cba31aa901054948293180a6131704/src/Helpers/EventEmitter.ts\n**/\nexport class EventEmitter {\n  /**\n   * A map of event to a list of callbacks\n   */\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  private observers: Map<string, Array<any>>;\n\n  /**\n   * A new EventEmitter with no observers\n   * @constructor\n   */\n  constructor() {\n    // map of observers\n    this.observers = new Map()\n  }\n\n  /**\n   * Subcribe to an event by providing a callback\n   * @param event the event to subscribe to\n   * @param cb the callback to run when the event is emitted\n   */\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  on = (event: string, cb: NoopFunction): void => {\n    if (!EventList.includes(event)) {\n      new AppWarning(`Event ['${event}'] is not supported.`);\n    }\n\n    // get list of cb for this event\n    const observer = this.observers.get(event)\n    // add cb to list if list exists\n    if (observer) observer.push(cb)\n    // initialize list with [cb]\n    else this.observers.set(event, [cb])\n  }\n\n  /**\n   * Unsubscribe to an event by removing a specific callback function\n   * @param event the event to unsubscribe to\n   * @param cb the callback to remove\n   */\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  remove = (event: string, cb: NoopFunction): void => {\n    // get list of cb for this event;\n    const observer = this.observers.get(event)\n    // return if no such list exists\n    if (!observer) return\n    // find cb in list\n    for (let i = 0; i < observer.length; i++) {\n      // matching cb\n      if (observer[i] === cb) {\n        // remove cb from list\n        observer.splice(i, 1)\n        return\n      }\n    }\n  }\n\n  /**\n   * Emit an event with arguments for callbacks\n   * @param event the event to emit\n   * @param args extra arguments for the callbacks of this event\n   */\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n  emit = (event: string, ...args: any[]): void => {\n    // get list of cb for this event\n    const observer = this.observers.get(event)\n    // return if no such list exist\n    if (!observer) return\n    // call each cb with arguments\n    for (let i = 0; i < observer.length; i++) {\n      observer[i](...args)\n    }\n  }\n}\n", "import { IScreenViewport } from \"@/helpers/intefaces\";\nimport { EventEmitter } from \"@/common/events\";\nimport { AppError } from \"@/helpers/error\";\nimport * as utils from \"@/helpers/utils\";\n\nexport class Base {\n\n  /**\n   * EventEmitter \n   */\n  public events: EventEmitter;\n\n  /**\n   * Viewport\n   */\n  public screen: IScreenViewport;\n\n  /**\n   * Creates an instance.\n   * \n   * @constructor\n   * @memberof Base\n   * @throws\n   */\n  constructor() {\n\n    // Test window is defined\n    if (!window) {\n      throw new AppError(\"window is not found.\");\n    }\n\n    // Test document is defined\n    if (!document) {\n      throw new AppError(\"document is not found.\");\n    }\n\n    // Event bus\n    this.events = new EventEmitter();\n\n    // Set viewport\n    this.screen = this.getScreenViewport();\n\n    // Bind events\n    this.bind()\n  }\n\n  /**\n   * Bind events\n   */\n  private bind(): void {\n    // Bind window events\n    window.addEventListener(\"resize\", utils.debounce(this.handleResize.bind(this)));\n    window.addEventListener(\"scroll\", utils.debounce(this.handleScroll.bind(this)));\n\n    // on viewport resize event\n    this.events.on(utils.AppEvent.viewport.resize, (viewport: IScreenViewport) => {\n      // Update vieport\n      this.screen = viewport;\n    });\n  }\n\n  /**\n   * Get window viewport size\n   * \n   * @returns {IScreenViewport}\n   */\n  public getScreenViewport(): IScreenViewport {\n    return {\n      x: window.innerWidth || document.documentElement?.clientWidth,\n      y: window.innerHeight || document.documentElement?.clientHeight\n    };\n  }\n\n  /**\n   * Set Viewport sizes on window resize event\n   */\n  public handleResize(): void {\n    this.events.emit(utils.AppEvent.viewport.resize, this.getScreenViewport());\n  }\n\n  /**\n   * Set scrolltop on window scroll event\n   */\n  public handleScroll(): void {\n    // Credits: \"https://github.com/qeremy/so/blob/master/so.dom.js#L426\"\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    this.events.emit(utils.AppEvent.viewport.scroll, scrollTop)\n  }\n}\n\nexport default Base;", "import { IUserInputs, IFrame } from '@/helpers/intefaces'\nimport { Frame } from './frame';\nimport Base from './base';\n\n/**\n * Plugin options.\n *\n * @export\n * @class Options\n * @implements {IOptions}\n */\nexport class Options extends Base {\n\n  // User inputs\n  public inputs: IUserInputs;\n\n  // Identifier for appended elements\n  public identifier: string;\n\n  // Animation Height\n  public scrollArea: string | number = 0;\n\n  // Frame\n  protected frame: IFrame;\n\n  /**\n   * Creates an instance of Options.\n   * @param {IUserInputs} [options] Options to copy properties.\n   * @memberof Options\n   */\n  constructor(options: IUserInputs) {\n    super();\n\n    // Set user inputs\n    this.inputs = options;\n\n    // Set identifier\n    this.identifier = options.identifier || 'csc';\n\n    // Set frame\n    this.frame = new Frame(options);\n\n    // Set Container Height if defined\n    this.scrollArea = options.scrollArea || 0;\n\n    if (options.scrollArea && typeof options.scrollArea == \"string\") {\n      this.scrollArea = parseInt(options.scrollArea, 10);\n    }\n  }\n\n  /**\n   * Set scrollable area height\n   */\n  public set setScrollableArea(height: number) {\n    if (this.scrollArea)\n      return\n\n    this.scrollArea = height;\n  }\n}\n\n/**\n * @export\n */\nexport default Options;", "import { ICanvasViewport, IUserInputs } from \"@/helpers/intefaces\";\nimport { AppError } from \"@/helpers/error\";\nimport { Options } from \"@/common/options\";\nimport * as utils from \"@/helpers/utils\";\n\n/**\n * Canvas\n *\n * @export\n * @class Canvas\n */\nexport class Canvas extends Options {\n\n  /**\n   * Loading\n   */\n  private loading: boolean = true;\n\n  /**\n   * Wrapper HTML element\n   */\n  private _container: HTMLElement;\n\n  /**\n   * HTML element \n   */\n  private _wrapper: HTMLElement;\n\n  /**\n   * Canvas DOM element\n   */\n  private _canvas: HTMLCanvasElement;\n\n  /**\n   * Images\n   */\n  private images: HTMLImageElement[] = [];\n\n  /**\n   * Canvas context\n   */\n  private context: CanvasRenderingContext2D;\n\n  /**\n   * Canvas viewport\n   */\n  protected viewport: ICanvasViewport;\n\n  /**\n   * Creates an instance of Canvas.\n   * \n   * @constructor\n   * @param {HTMLElement} HTML element.\n   * @memberof Canvas\n   */\n  constructor(element: HTMLElement, options: IUserInputs) {\n    super(options);\n\n    // Check if HTMLCanvasElement exists\n    if (!element) {\n      throw new AppError('HTML element is not defined.');\n    }\n\n    // Set container\n    this._container = element;\n\n    // Append canvas and loader to an element\n    this._container.classList.add(`${this.identifier}-container`);\n    this._container.style.setProperty('height', `${this.scrollArea}px`);\n\n    // Create canvas element\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`${this.identifier}-canvas`);\n\n    // Create wrapper container\n    this._wrapper = document.createElement('div')\n    this._wrapper.classList.add(this.identifier);\n    this._wrapper.appendChild(this._canvas);\n\n    // Output template\n    this._container.appendChild(this._wrapper);\n\n    // Get context\n    this.context = this._canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n    // Set viewport default\n    this.viewport = {\n      width: this.screen.x,\n      height: this.screen.y,\n      top: 0,\n      bottom: this.screen.y\n    };\n\n    // Bind scroll event\n    this.events.on(utils.AppEvent.viewport.scroll, (scrollTop) => {\n      if (!this.loading)\n        this.drawImageByScrollTop(scrollTop);\n    });\n\n    // Preload Images\n    this.preload();\n  }\n\n  /**\n   * Preload images\n   * \n   * @returns \n   */\n  private async preload() {\n\n    // TODO: should I refactor this\n    return await utils.preloadImages(this.frame).then(images => {\n      this.images = images;\n\n      // Set Canvas viewport\n      this.viewport = {\n        width: this.images[0]?.width,\n        height: this.images[0]?.height,\n        top: this._container.getBoundingClientRect().top + utils.getScrollTop() || 0,\n        bottom: this._container.getBoundingClientRect().bottom + utils.getScrollTop() || 0\n      };\n\n      // Set canvas size\n      // TODO async/await for first image earlier\n      this._canvas.width = this.viewport.width;\n      this._canvas.height = this.viewport.height;\n      this.setScrollableArea = this.viewport.height * 2;\n      this._container.style.setProperty('height', `${this.scrollArea}px`);\n\n      // Initial image load\n      this.drawImageByScrollTop();\n\n      // Add loaded classes\n      this._container.classList.add(`${this.identifier}--loaded`);\n\n      // Images loaded\n      this.loading = false;\n\n      // Emit images loaded event\n      // End of everything\n      this.events.emit(utils.AppEvent.images.loaded);\n    });\n  }\n\n  /**\n   * Draw image in Canvas Element\n   * \n   * @param image \n   */\n  public drawImage(image: HTMLImageElement): void {\n    this.context.drawImage(image, 0, 0, this.viewport.width, this.viewport.height);\n  }\n\n  /**\n   * Draw image in canvas by frame number\n   * @param {scrollTop} number\n   * @private\n   * \n   * Hidden in order to not display this method in docs\n   * @hidden\n   */\n  public drawImageByFrameNumber(frameNumber = 0): void {\n    this.drawImage(this.images[frameNumber]);\n  }\n\n  /**\n   * Draw image in canvas by scroll top position.\n   * \n   * @param {scrollTop} number\n   */\n  public drawImageByScrollTop(scrollTop?: number): void {\n    const scrollFraction = utils.getScrollFraction(scrollTop);\n    let frameIndex;\n\n    frameIndex = Math.min(\n      this.frame.count - 1, // Due to array index\n      Math.ceil(scrollFraction * this.frame.count)\n    );\n\n    if (frameIndex <= 0)\n      frameIndex = 0;\n\n    this.drawImageByFrameNumber(frameIndex);\n  }\n}\n\nexport default Canvas;", "import { NoopFunction, IUserInputs } from \"@/helpers/intefaces\";\nimport { Canvas } from \"@/common/canvas\";\nimport { debounce, AppEvent } from \"@/helpers/utils\";\n\n/**\n * @module\n * CanvasClip.js\n */\n\n/**\n * @class Main class\n */\nexport class Main extends Canvas {\n\n  /**\n   * This callback is called when the class is loaded\n   * \n   * @callback CallbackFunction\n   */\n  public callback: NoopFunction;\n\n  /**\n   * An instance of App.js.\n   * \n   * @constructor\n   * @param {String} class name of an HTML element.\n   * @param {function} Callback function\n   * @memberof Main\n   */\n  constructor(element: HTMLElement, options: IUserInputs, callback?: NoopFunction) {\n    // Instantiate Canvas Class\n    super(element, options);\n\n    // Callback function if defined\n    this.callback = callback || (() => {\n      // eslint - do nothing.\n    });\n\n    // Initialize\n    this.init();\n  }\n\n  /**\n   * Hidden in order not to display this method in docs\n   * Initializes in constructor\n   * \n   * @hidden\n   */\n  private init(): void {\n\n    // Bind images loaded event\n    this.events.on(AppEvent.images.loaded, () => {\n      // Next tick of instance\n      debounce(this.callback());\n    });\n  }\n}\n\nexport default Main;\n", "import CanvasScrollClip from './main';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(window as any).csc = CanvasScrollClip // instead of casting window to any, you can extend the Window interface: https://stackoverflow.com/a/43513740/5433572"],
  "mappings": "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",
  "names": []
}
